"use strict";(self.webpackChunkhakehardware=self.webpackChunkhakehardware||[]).push([[422],{9781:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=t(4848),o=t(8453);const s={title:"Advanced Autonomys Clusters"},a=void 0,l={id:"guides/autonomys/advanced-clusters",title:"Advanced Autonomys Clusters",description:"This guide was created for Gemeni 3h testnet and will be updated to mainnet once released.",source:"@site/docs/guides/autonomys/advanced-clusters.md",sourceDirName:"guides/autonomys",slug:"/guides/autonomys/advanced-clusters",permalink:"/docs/guides/autonomys/advanced-clusters",draft:!1,unlisted:!1,editUrl:"https://github.com/hakehardware/hakehardware.github.io/edit/main/docs/guides/autonomys/advanced-clusters.md",tags:[],version:"current",frontMatter:{title:"Advanced Autonomys Clusters"},sidebar:"guides",previous:{title:"Prep Your Drives for Autonomys",permalink:"/docs/guides/autonomys/prep-your-drives-for-autonomys"},next:{title:"Monitoring Your Autonomys Containers with Grafana",permalink:"/docs/guides/autonomys/enable-grafana-metrics"}},i={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Multiple Controller/Cache Pairs",id:"multiple-controllercache-pairs",level:2},{value:"NATs Cluster",id:"nats-cluster",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"This guide was created for Gemeni 3h testnet and will be updated to mainnet once released."})}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.p,{children:"Clusters can become pretty complicated as they grow. For the most part they scale well without doing too much work, but if your farm grows a lot then the potential for efficiencies and redundancies grows."}),"\n",(0,r.jsx)(n.h2,{id:"multiple-controllercache-pairs",children:"Multiple Controller/Cache Pairs"}),"\n",(0,r.jsx)(n.p,{children:"If you are running multiple Plotters in a Cluster it can be beneficial to run a Controller/Cache pair on each. Since the plotter needs to retrieve data from the Cache it makes sense to have a Cache on each plotter. I have not been able to fully test just how much faster plotting is by having a localized Cache, but in theory there are benfits. If you have an extra 100GB or so of space, you should see some improvement."}),"\n",(0,r.jsxs)(n.p,{children:["For each pair, you can create a ",(0,r.jsx)(n.code,{children:"cache-group"}),". The relationship between a Controller and Cache is 1",":N"," but each Controller must have it's own Cache. Again, the benefit of just running localized Cache, all connected to a single Controller, vs running local Controller/Cache has not been tested, but it does not cost much resources to a pair."]}),"\n",(0,r.jsxs)(n.p,{children:["An example of a Cluster Plotter, running a localized Controller/Cache pair can be found on the ",(0,r.jsx)(n.a,{href:"https://github.com/hakehardware/autonomys_files/blob/main/plotter_with_cache_group.yaml",children:"autonomys files repo"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hakehardware/autonomys_files/blob/main/plotter_with_cache_group.yaml",children:"plotter_with_cache_group.yaml"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"I believe all Controllers must connect to the same node, so be sure to update the IP address for the Node. Also the above file assumes a single NATs instance, however in the next section we will talk about how to create a NATs cluster, which is a great option to combine with a Controller/Cache pair, allowing nearly full redundancy (Node is the weak spot)."}),"\n",(0,r.jsx)(n.h2,{id:"nats-cluster",children:"NATs Cluster"}),"\n",(0,r.jsxs)(n.p,{children:["Although it uses the word Cluster, a NATs cluster is a feature of NATs and not Autonomys. To run a NATs cluster you must have a ",(0,r.jsx)(n.code,{children:"seed server"})," and then N child servers. The ",(0,r.jsx)(n.code,{children:"seed server"})," specifies the ",(0,r.jsx)(n.code,{children:"cluster_name"}),", which must be specified then by all children."]}),"\n",(0,r.jsxs)(n.p,{children:["An example can be found on the ",(0,r.jsx)(n.a,{href:"https://docs.nats.io/running-a-nats-service/configuration/clustering#running-a-simple-cluster",children:"Official NATs Documention"})]}),"\n",(0,r.jsx)(n.p,{children:"On the Autonomys side, you will then need to specify each NATs IP address for your Cluster components. It is worth noting that a NATs cluster simply provides redundancy and not load balancing."}),"\n",(0,r.jsx)(n.p,{children:"We can use a Cluster Controller as an example, assuming we have three NATs containers as part of a NATs cluster: 192.168.69.100, 192.168.69.101, and 192.168.69.102, we would specify the following for our Controller:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  cluster_controller:\r\n    container_name: cluster_controller\r\n    image: ghcr.io/autonomys/farmer:<LATEST VERSION>\r\n    restart: unless-stopped\r\n    volumes:\r\n      - /path/to/your/controller:/controller\r\n    ports:\r\n      - "9081:9081"\r\n    command:\r\n      [\r\n        "cluster",\r\n        "--nats-server", "nats://192.168.69.100:4222",\r\n        "--nats-server", "nats://192.168.69.101:4222",\r\n        "--nats-server", "nats://192.168.69.102:4222",\r\n        "--prometheus-listen-on", "0.0.0.0:9081",\r\n        "controller",\r\n        "--base-path", "/controller",\r\n        "--node-rpc-url", "ws://node:9944"\r\n      ]\r\n    labels:\r\n      com.spaceport.name: "Controller"\r\n    environment:\r\n      - TZ=<YOUR TIMEZONE>\r\n    networks:\r\n      autonomys-network:\r\n        ipv4_address: 172.25.0.102\r\n\r\nnetworks:\r\n  autonomys-network:\r\n    external: true\n'})}),"\n",(0,r.jsxs)(n.p,{children:["A full example of a NATs ",(0,r.jsx)(n.code,{children:"seed server"})," and ",(0,r.jsx)(n.code,{children:"child server"})," can be found in these two files:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hakehardware/autonomys_files/blob/main/nats_seed_server.yaml",children:"nats_seed_server.yaml"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hakehardware/autonomys_files/blob/main/nats_child_server.yaml",children:"nats_child_server.yaml"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(6540);const o={},s=r.createContext(o);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);