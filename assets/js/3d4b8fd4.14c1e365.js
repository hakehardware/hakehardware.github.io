"use strict";(self.webpackChunkhakehardware=self.webpackChunkhakehardware||[]).push([[974],{2446:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=i(4848),t=i(8453);const r={title:"Build Autonomys Images for COMET (CM3588)"},l=void 0,s={id:"guides/comet/build-autonomys-image",title:"Build Autonomys Images for COMET (CM3588)",description:"Introduction",source:"@site/docs/guides/comet/build-autonomys-image.md",sourceDirName:"guides/comet",slug:"/guides/comet/build-autonomys-image",permalink:"/docs/guides/comet/build-autonomys-image",draft:!1,unlisted:!1,editUrl:"https://github.com/hakehardware/hakehardware.github.io/edit/main/docs/guides/comet/build-autonomys-image.md",tags:[],version:"current",frontMatter:{title:"Build Autonomys Images for COMET (CM3588)"},sidebar:"guides",previous:{title:"Install Debian Core on CM3588",permalink:"/docs/guides/linux/install-debian-core"},next:{title:"Autonomys",permalink:"/docs/category/autonomys"}},a={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Clone Repo",id:"clone-repo",level:2},{value:"Set up buildx",id:"set-up-buildx",level:2},{value:"Build the Image",id:"build-the-image",level:2},{value:"Farmer",id:"farmer",level:3},{value:"Node",id:"node",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"There is no compatible Docker image for the COMET (CM3588), which requires users to build their own. This is a pretty simple process, we need to:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Clone the Autonomys Subspace Repository"}),"\n",(0,o.jsx)(n.li,{children:"Set up buildx"}),"\n",(0,o.jsx)(n.li,{children:"Build the Image"}),"\n",(0,o.jsx)(n.li,{children:"Use the image in our container"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"To do this you should have Docker installed"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://hakehardware.github.io/docs/guides/linux/install-docker-debian",children:"Install Docker on Debian"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"clone-repo",children:"Clone Repo"}),"\n",(0,o.jsx)(n.p,{children:"Currently, since mainnet is not live, we must clone the maintenance branch. This will not be required once mainnet is here"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"git clone --branch maintenance https://github.com/autonomys/subspace.git\n"})}),"\n",(0,o.jsx)(n.h2,{id:"set-up-buildx",children:"Set up buildx"}),"\n",(0,o.jsx)(n.p,{children:"Set up a buildx builder that supports multiple platforms"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo docker buildx create --use\n"})}),"\n",(0,o.jsx)(n.h2,{id:"build-the-image",children:"Build the Image"}),"\n",(0,o.jsxs)(n.p,{children:["We need to build the image for ",(0,o.jsx)(n.code,{children:"linux/arm64"})," using the correct dockerfile (aarch64) for both the Farmer and the Node. Using the ",(0,o.jsx)(n.code,{children:"--load"})," flag should store the image locally for use."]}),"\n",(0,o.jsx)(n.h3,{id:"farmer",children:"Farmer"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo docker buildx build --platform linux/arm64 --progress plain --load -t autonomys-comet-farmer:maintenance -f Dockerfile-farmer.aarch64 .\r\n\r\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"node",children:"Node"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo docker buildx build --platform linux/arm64 --progress plain --load -t autonomys-comet-node:maintenance -f Dockerfile-node.aarch64 .\n"})}),"\n",(0,o.jsx)(n.p,{children:"This process may take some time depending on the resources your PC has available."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>s});var o=i(6540);const t={},r=o.createContext(t);function l(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);