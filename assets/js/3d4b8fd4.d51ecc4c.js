"use strict";(self.webpackChunkhakehardware=self.webpackChunkhakehardware||[]).push([[974],{2446:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var t=n(4848),i=n(8453);const r={title:"Build Autonomys Images for COMET (CM3588)"},s=void 0,a={id:"guides/comet/build-autonomys-image",title:"Build Autonomys Images for COMET (CM3588)",description:"You can also use the image I created if you do not wish to build your own",source:"@site/docs/guides/comet/build-autonomys-image.md",sourceDirName:"guides/comet",slug:"/guides/comet/build-autonomys-image",permalink:"/docs/guides/comet/build-autonomys-image",draft:!1,unlisted:!1,editUrl:"https://github.com/hakehardware/hakehardware.github.io/edit/main/docs/guides/comet/build-autonomys-image.md",tags:[],version:"current",frontMatter:{title:"Build Autonomys Images for COMET (CM3588)"},sidebar:"guides",previous:{title:"COMET (CM3588)",permalink:"/docs/category/comet"},next:{title:"Install OS on eMMC using SD Card",permalink:"/docs/guides/comet/install-os-on-comet"}},d={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Download Latest Version",id:"download-latest-version",level:2},{value:"Set up buildx",id:"set-up-buildx",level:2},{value:"Build the Image",id:"build-the-image",level:2},{value:"Farmer",id:"farmer",level:3},{value:"Node",id:"node",level:3}];function c(e){const o={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.admonition,{type:"info",children:[(0,t.jsx)(o.p,{children:"You can also use the image I created if you do not wish to build your own"}),(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"https://hub.docker.com/repository/docker/hakehardware/autonomys-comet-farmer/general",children:"COMET Farmer"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"https://hub.docker.com/repository/docker/hakehardware/autonomys-comet-node/general",children:"COMET Node"})}),"\n"]})]}),"\n",(0,t.jsx)(o.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(o.p,{children:"There is no compatible Docker image for the COMET (CM3588), which requires users to build their own. This is a pretty simple process, we need to:"}),"\n",(0,t.jsxs)(o.ol,{children:["\n",(0,t.jsx)(o.li,{children:"Clone the Autonomys Subspace Repository"}),"\n",(0,t.jsx)(o.li,{children:"Set up buildx"}),"\n",(0,t.jsx)(o.li,{children:"Build the Image"}),"\n",(0,t.jsx)(o.li,{children:"Use the image in our container"}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:"To do this you should have Docker installed"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"https://hakehardware.github.io/docs/guides/linux/install-docker-debian",children:"Install Docker on Debian"})}),"\n"]}),"\n",(0,t.jsx)(o.h2,{id:"download-latest-version",children:"Download Latest Version"}),"\n",(0,t.jsxs)(o.p,{children:["Head over to ",(0,t.jsx)(o.a,{href:"https://github.com/autonomys/subspace/releases",children:"Autonomys Releases"})," and get the source from the latest release. Once you copy the link you can download it with wget"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"wget <LINK>\n"})}),"\n",(0,t.jsx)(o.p,{children:"Then extract the tar with"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"tar -xzvf <tar file>\n"})}),"\n",(0,t.jsx)(o.p,{children:"Then cd into the directory that was created."}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"cd <FOLDER NAME>\n"})}),"\n",(0,t.jsx)(o.h2,{id:"set-up-buildx",children:"Set up buildx"}),"\n",(0,t.jsx)(o.p,{children:"Set up a buildx builder, if you do not already have one, that supports multiple platforms"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"sudo docker buildx create --use\n"})}),"\n",(0,t.jsx)(o.h2,{id:"build-the-image",children:"Build the Image"}),"\n",(0,t.jsxs)(o.p,{children:["We need to build the image for ",(0,t.jsx)(o.code,{children:"linux/arm64"})," using the correct dockerfile (aarch64) for both the Farmer and the Node. Using the ",(0,t.jsx)(o.code,{children:"--load"})," flag should store the image locally for use. You should update the ",(0,t.jsx)(o.code,{children:"<TAG>"})," to be the current release, such as ",(0,t.jsx)(o.code,{children:"gemini-3h-2024-oct-03"})]}),"\n",(0,t.jsx)(o.h3,{id:"farmer",children:"Farmer"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"sudo docker buildx build --platform linux/arm64 --progress plain --load -t autonomys-comet-farmer:<TAG> -f Dockerfile-farmer.aarch64 .\n"})}),"\n",(0,t.jsx)(o.h3,{id:"node",children:"Node"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"sudo docker buildx build --platform linux/arm64 --progress plain --load -t autonomys-comet-node:<TAG> -f Dockerfile-node.aarch64 .\n"})}),"\n",(0,t.jsx)(o.p,{children:"This process may take some time depending on the resources your PC has available."})]})}function u(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>a});var t=n(6540);const i={},r=t.createContext(i);function s(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:o},e.children)}}}]);